//combined version
'use strict';

(function (angular) {
    angular.module('app', ['templates', 'ngRoute', 'ui.bootstrap', 'angularSpinner', 'ngAnimate']);
})(angular);
'use strict';

(function (angular) {
    angular.module('app').controller('headerCtrl', headerCtrl);

    headerCtrl.$inject = ['$scope'];

    function headerCtrl($scope) {}
})(angular);
'use strict';

(function (angular) {
    angular.module('app').controller('footerCtrl', footerCtrl);

    footerCtrl.$inject = ['$scope'];

    function footerCtrl($scope) {}
})(angular);
'use strict';

(function (angular) {
    angular.module('app').controller('mainCtrl', mainCtrl);

    mainCtrl.$inject = ['authService'];

    function mainCtrl(authService) {
        var main = this;

        authService.auth().then(function (ldap) {
            return console.log(ldap);
        });
    }
})(angular);
'use strict';

(function (angular) {
    angular.module('app').factory('alertService', alertService);

    function alertService() {
        var alerts = [];

        function getAlerts() {
            return alerts;
        }

        function addAlert(type, msg) {
            alerts.push({
                type: type,
                msg: msg
            });
        }

        function closeAlert(index) {
            alerts.splice(index, 1);
        }

        return {
            addAlert: addAlert,
            closeAlert: closeAlert,
            getAlerts: getAlerts
        };
    }
})(angular);
'use strict';

(function (angular) {
    angular.module('app').factory('authService', authService);

    authService.$inject = ['$http', '$q'];

    function authService($http, $q) {
        var ldapLogin, ldapPromise;

        function getLdap() {
            return ldapLogin;
        }

        function checkLogin() {
            if (ldapLogin.toUpperCase() === 'DN310770DNL' || ldapLogin.toUpperCase() === 'DN230387TJI' || ldapLogin.toUpperCase() === 'DD160585GIA' || ldapLogin.toUpperCase() === 'DN170678DIA' || ldapLogin.toUpperCase() === 'DN221264KIL' || ldapLogin.toUpperCase() === 'DN280186MSA' || ldapLogin.toUpperCase() === 'DN280884KLA' || ldapLogin.toUpperCase() === 'IT050682GJJ' || ldapLogin.toUpperCase() === 'DN100985TMA') {
                return true;
            } else {
                return false;
            }
        }

        function auth() {
            if (ldapPromise) {
                return ldapPromise;
            }

            ldapPromise = $http({
                method: 'GET',
                url: 'api/getLdap'
            }).then(function (resp) {
                ldapLogin = resp.data;

                if (!ldapLogin) {
                    alertService.addAlert('danger', 'Не удалось получить лдап логин');
                }

                return ldapLogin;
            });

            return ldapPromise;
        }

        return {
            getLdap: getLdap,
            auth: auth,
            checkLogin: checkLogin
        };
    }
})(angular);
'use strict';

(function (angular) {
    angular.module('app').factory('errorHandlerService', errorHandlerService);

    function errorHandlerService() {
        function errorHandler(resp) {
            console.log('error', resp);
        }

        return {
            errorHandler: errorHandler
        };
    }
})(angular);
'use strict';

(function (angular) {
    angular.module('app').factory('httpService', httpService);

    httpService.$inject = ['$http'];

    function httpService($http) {
        return {
            getTable: getTable
        };

        function getTable(procId, tableName, checkId) {
            return $http({
                method: 'GET',
                url: 'api/getTable'
            });
        }
    }
})(angular);
'use strict';

(function (angular) {
    angular.module('app').factory('spinnerInterceptor', spinnerInterceptor);

    spinnerInterceptor.$inject = ['$q', 'spinnerService', '$timeout'];

    function spinnerInterceptor($q, spinnerService, $timeout) {
        return {
            request: function request(config) {
                spinnerService.start();

                return config || $q.when(config);
            },
            response: function response(_response) {
                return $timeout(function () {
                    spinnerService.stop();

                    return _response || $q.when(_response);
                }, 0);
            },
            requestError: function requestError(rejection) {
                spinnerService.stop();

                return $q.reject(rejection);
            },
            responseError: function responseError(rejection) {
                spinnerService.stop();

                return $q.reject(rejection);
            }
        };
    }
})(angular);
'use strict';

(function (angular) {
    angular.module('app').service('spinnerService', spinnerService);

    spinnerService.$inject = ['usSpinnerService', '$timeout'];

    function spinnerService(usSpinnerService, $timeout) {
        var spinnerStatus = 0,
            spinnerName = 'spinner-1',
            recentTap = false;

        function start() {
            $timeout(function () {
                if (!spinnerStatus) {
                    usSpinnerService.spin(spinnerName);
                }

                spinnerStatus++;
            });
        }

        function stop() {
            spinnerStatus--;

            if (spinnerStatus === 0) {
                usSpinnerService.stop(spinnerName);
            }
        }

        function execWithDelay(callback, delay) {
            if (!recentTap) {
                recentTap = true;
                start();
                $timeout(function () {
                    callback();

                    recentTap = false;
                    stop();
                }, delay);
            }
        }

        return {
            start: start,
            stop: stop,
            execWithDelay: execWithDelay
        };
    }
})(angular);
'use strict';

(function (angular) {
    angular.module('app').config(['$routeProvider', function ($routeProvider) {
        $routeProvider.when('/', {
            controller: 'mainCtrl',
            controllerAs: 'main',
            templateUrl: 'main/views/main.html'
        }).otherwise({
            redirectTo: '/'
        });
    }]);

    angular.module('app').config(['$httpProvider', function ($httpProvider) {
        $httpProvider.interceptors.push('spinnerInterceptor');
    }]);
})(angular);
'use strict';

(function (angular) {
    angular.module('app').controller('bodyCtrl', bodyCtrl);

    bodyCtrl.$inject = ['alertService'];

    function bodyCtrl(alertService) {
        var self = this;

        self.alerts = alertService.getAlerts();

        self.closeAlert = function (index) {
            alertService.closeAlert(index);
        };
    }
})(angular);
"use strict";

(function (angular) {})(angular);